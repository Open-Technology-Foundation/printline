#!/bin/bash

printline() {
  local -i cols remaining
  local -- oldstty row_col char="${1:-}" prefix="${2:-}"
  local -- COL=1
  [[ -z $char ]] && char='-'
  char=${char:0:1}

  # Print prefix text if provided
  [[ -n "$prefix" ]] && printf '%s' "$prefix"

  # Get terminal width
  cols=$(tput cols 2>/dev/null || echo "${COLUMNS:-78}")

  # Only try to get cursor position if we're in a terminal
  if [[ -t 1 && -c /dev/tty ]]; then
    # Save stdin
    exec {SAVED_STDIN}<&0
    
    # Set up terminal for raw input
    exec < /dev/tty
    oldstty=$(stty -g)
    stty raw -echo min 0 time 1
    
    # Request cursor position
    printf "\033[6n" > /dev/tty
    
    # Read the response: ESC [ rows ; cols R
    # Parse out just the column number
    read -r -d R row_col
    if [[ $row_col =~ \[([0-9]+)\;([0-9]+)$ ]]; then
      # We only need the column number
      COL=${BASH_REMATCH[2]}
    fi
    
    # Restore terminal settings
    stty "$oldstty"
    # Restore stdin
    exec <&$SAVED_STDIN
  fi

  # Calculate remaining columns
  remaining=$((cols - COL + 1))
  # Ensure remaining is non-negative
  ((remaining < 0)) && remaining=0

  # Print the character 'remaining' times
  printf "%0.s$char" $(seq 1 "$remaining")
  printf "\n"
}

# Only run main if the script is being executed directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  set -euo pipefail
  # Capture script path, avoiding SC2155
  PRG0="$(readlink -en -- "$0")"
  readonly -- PRG0
  
  #shellcheck disable=SC2034 # Used in help text
  readonly -- PRGDIR="${PRG0%/*}" PRG="${PRG0##*/}"
  [[ ${1:-} == '-h' || ${1:-} == '--help' ]] && {
    cat <<-EOT
$PRG $(cat "$PRGDIR"/.version)

Print a line of repeated chars from the current
cursor position to the end of the line.

usage: $PRG [char [text]]

char is any single printable character. default '-'.
text is any text to print before the line chars.

examples:
  $PRG
  $PRG '='
  echo -n "123 abc "; printline '#'
  $PRG '*' '# topic header '
  $PRG '=' '    ## section 1 '
  $PRG '-' '        ### subsection 1 '
EOT
  exit 0
  }

  printline "$@"
fi

#fin
